<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>打印机 on 梁某银的博客</title>
    <link>https://liangmouyin.com/blog/%E6%89%93%E5%8D%B0%E6%9C%BA/</link>
    <description>Recent content in 打印机 on 梁某银的博客</description>
    <generator>Hugo</generator>
    <language>zh-CN</language>
    <copyright>Copyright © 2025, 梁某银</copyright>
    <lastBuildDate>Sat, 21 Jun 2025 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://liangmouyin.com/blog/%E6%89%93%E5%8D%B0%E6%9C%BA/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>我的终极文章打印方案：不靠插件、软件，只用小书签！</title>
      <link>https://liangmouyin.com/250621-printer/</link>
      <pubDate>Sat, 21 Jun 2025 00:00:00 +0000</pubDate>
      <guid>https://liangmouyin.com/250621-printer/</guid>
      <description>&lt;p&gt;没错，我的文章打印方案更新了！这次更强大、更简单、更快速！&lt;/p&gt;&#xA;&lt;p&gt;我回想之前的文章打印方案，发现工具实在繁琐，尤其是需要 Obsidian 这一项，就拦掉了一批没用过软件的人。&lt;/p&gt;&#xA;&lt;p&gt;今天我就思考，有没有更好的解决方法。一开始我折腾 Microsoft Edge 的阅读模式，又下载插件，换浏览器，最后逛 UTGD 时，看到了一个完美的解决思路：借助小书签（Bookmarklet）来调整文章格式！&lt;/p&gt;&#xA;&lt;p&gt;我简要介绍一下小书签，它是一种特殊的浏览器书签，点击后就执行 JavaScript 代码，能直接对当前页面进行操作。它的优势是，支持几乎所有主流浏览器，无需下载，比插件更方便，还能自行修改，满足需求。&lt;/p&gt;&#xA;&lt;p&gt;使用方法很简单：直接复制小书签，随后在浏览器随便添加一个网页书签，把网址替换成 javascript 代码即可。如果觉得不需要，刷新网页就能恢复原状。&lt;/p&gt;&#xA;&lt;p&gt;理论说到这里，下面说解决方案。&lt;/p&gt;&#xA;&lt;h2 id=&#34;1把网页文章调整成纯净阅读模式&#34;&gt;1、把网页文章调整成纯净阅读模式。&lt;/h2&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;javascript:(function()%7Bjavascript%3A(function()%7Bjavascript%3A(function()%7Bconsole.log(&amp;#39;start&amp;#39;)%3Bvar jsCode%3Ddocument.createElement(&amp;#39;script&amp;#39;)%3BjsCode.setAttribute(&amp;#39;src&amp;#39;%2C&amp;#39;https%3A%2F%2Fgcore.jsdelivr.net%2Fgh%2Fmozilla%2Freadability%2FReadability.js&amp;#39;)%3Bwindow.cleanHtml%3D(function()%7Bvar loc%3Ddocument.location%3Bvar uri%3D%7Bspec%3Aloc.href%2Chost%3Aloc.host%2CprePath%3Aloc.protocol%2B&amp;#39;%2F%2F&amp;#39;%2Bloc.host%2Cscheme%3Aloc.protocol.substr(0%2Cloc.protocol.indexOf(&amp;#39;%3A&amp;#39;))%2CpathBase%3Aloc.protocol%2B&amp;#39;%2F%2F&amp;#39;%2Bloc.host%2Bloc.pathname.substr(0%2Cloc.pathname.lastIndexOf(&amp;#39;%2F&amp;#39;)%2B1)%7D%3Bvar article%3Dnew Readability(uri%2Cdocument).parse()%3Bvar titleElement%3Ddocument.createElement(&amp;#39;h1&amp;#39;)%3BtitleElement.textContent%3Darticle.title%3BtitleElement.style.textAlign%3D&amp;#39;center&amp;#39;%3BtitleElement.style.margin%3D&amp;#39;20px 0&amp;#39;%3BtitleElement.style.backgroundColor%3D&amp;#39;transparent&amp;#39;%3BtitleElement.style.border%3D&amp;#39;none&amp;#39;%3BtitleElement.style.padding%3D&amp;#39;0&amp;#39;%3Bvar metadataElement%3Ddocument.createElement(&amp;#39;p&amp;#39;)%3BmetadataElement.style.textAlign%3D&amp;#39;center&amp;#39;%3BmetadataElement.style.color%3D&amp;#39;%23555&amp;#39;%3BmetadataElement.style.fontSize%3D&amp;#39;12px&amp;#39;%3BmetadataElement.style.margin%3D&amp;#39;-15px 0 25px 0&amp;#39;%3BmetadataElement.style.lineHeight%3D&amp;#39;1.6&amp;#39;%3BmetadataElement.style.wordBreak%3D&amp;#39;break-word&amp;#39;%3Bvar metadataParts%3D%5B%5D%3Bif(article.byline)%7BmetadataParts.push(&amp;#39;作者%3A &amp;#39;%2Barticle.byline)%3B%7Dvar linkHTML%3D&amp;#39;原文%3A &amp;lt;a href%3D&amp;#34;&amp;#39;%2Bloc.href%2B&amp;#39;&amp;#34; target%3D&amp;#34;_blank&amp;#34; style%3D&amp;#34;color%3A%23007bff%3Btext-decoration%3Aunderline%3B&amp;#34;&amp;gt;&amp;#39;%2Bloc.href%2B&amp;#39;&amp;lt;%2Fa&amp;gt;&amp;#39;%3BmetadataParts.push(linkHTML)%3BmetadataElement.innerHTML%3DmetadataParts.join(&amp;#39;&amp;lt;span style%3D&amp;#34;margin%3A0 1em%3B&amp;#34;&amp;gt;%7C&amp;lt;%2Fspan&amp;gt;&amp;#39;)%3Bvar contentDiv%3Ddocument.createElement(&amp;#39;div&amp;#39;)%3BcontentDiv.innerHTML%3Darticle.content%3Bdocument.head.innerHTML%3D&amp;#39;&amp;#39;%3Bvar cleanStyle%3Ddocument.createElement(&amp;#39;link&amp;#39;)%3BcleanStyle.setAttribute(&amp;#39;href&amp;#39;%2C&amp;#39;https%3A%2F%2Fgcore.jsdelivr.net%2Fgh%2Frunningcheese%2FAwesome-Bookmarklets%2Flibs%2Fclean.css&amp;#39;)%3BcleanStyle.setAttribute(&amp;#39;rel&amp;#39;%2C&amp;#39;stylesheet&amp;#39;)%3Bdocument.head.appendChild(cleanStyle)%3Bvar customStyles%3Ddocument.createElement(&amp;#39;style&amp;#39;)%3BcustomStyles.type%3D&amp;#39;text%2Fcss&amp;#39;%3Bvar styleText%3D&amp;#39;blockquote %7B color%3A %23666%3B display%3A block%3B margin%3A 0 0 16px%3B padding%3A 0 20px%3B border-left%3A %23ddd solid 4px%3B %7D h1%2C h2%2C h3%2C h4%2C h5%2C h6 %7B color%3A %23000000 !important%3B %7D body %7B color%3A %23000000 !important%3B font-size%3A 18px !important%3B line-height%3A 1.7 !important%3B %7D&amp;#39;%3BcustomStyles.appendChild(document.createTextNode(styleText))%3Bdocument.head.appendChild(customStyles)%3Bdocument.body.innerHTML%3D&amp;#39;&amp;#39;%3Bdocument.body.appendChild(titleElement)%3Bdocument.body.appendChild(metadataElement)%3Bdocument.body.appendChild(contentDiv)%3B%7D)%3BjsCode.onload%3DcleanHtml%3Bdocument.body.appendChild(jsCode)%3B%7D)()%7D)()%7D)()&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;（从左向右，选中复制即可）&lt;/p&gt;</description>
    </item>
    <item>
      <title>一台打印机，干掉我所有稍后读软件</title>
      <link>https://liangmouyin.com/250608-printer-read-later/</link>
      <pubDate>Sun, 08 Jun 2025 23:52:00 +0800</pubDate>
      <guid>https://liangmouyin.com/250608-printer-read-later/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;本文又名：怎么把文章打印成格式统一、可翻阅的小册子&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;打印机昨天到货后，今天我还在折腾怎么打印文章，让比例和格式更适合纸质阅读，目前算是折腾出几点小经验。&lt;/p&gt;&#xA;&lt;h2 id=&#34;1将文章打印成小册子booklet&#34;&gt;1、将文章打印成小册子（Booklet）。&lt;/h2&gt;&#xA;&lt;p&gt;所谓「小册子」，是一种小尺寸的印刷品，通常为 A5 尺寸（把 A4 纸对折即可）。这么做的好处是便携、易读和节省纸张。原本一张 A4 纸最多只能容下两页内容，而在小册子模式下可容纳两页，对折后如同一本小书，小巧轻便。&lt;/p&gt;&#xA;&lt;p&gt;如何使用这个功能？现在不少软件都支持把文件打印成小册子，我所用的是 Adobe Acrobat，只需在打印时，选择小册子，双面打印（前提是打印机支持），方向为纵向。&lt;/p&gt;&#xA;&lt;p&gt;&#xA;&lt;figure&gt;&#xA;    &lt;img src=&#34;https://img.liangmouyin.com/2025/06/ce2beaa6b40caff5473d7e8f8f6f3048.png&#34; alt=&#34;&#34; /&gt;&#xA;    &#xA;    &#xA;&lt;/figure&gt;&lt;/p&gt;&#xA;&lt;p&gt;如此只要等待打印机吐出一张张 A4 纸，你再拿到手对折即可。&lt;/p&gt;&#xA;&lt;h2 id=&#34;2打印前还需调整格式&#34;&gt;2、打印前还需调整格式。&lt;/h2&gt;&#xA;&lt;p&gt;我打印的大多是文章，但它们散落各处，有公众号、专栏、博客，格式五花八门。如果就直愣愣地在网页上导出为 PDF，就会出现行间距太大、留白太多、或文字大小不合适的情况，最后很难打印出满意的格式。&lt;/p&gt;&#xA;&lt;p&gt;就拿 #UNTAG 上的文章来说，它的排版非常舒服，可在 Windows 电脑上，一导出就出现无法识别粗体字的情况，里面加粗的标题、重点字句，字重全都一样，你看不出哪些地方加粗了。&lt;/p&gt;&#xA;&lt;p&gt;最后我的方法是保存文章到 Obsidian（理论上 Word 也能胜任，但我习惯用 Obsidian），这时再在里面导出为 PDF，最后到 Adobe Acrobat 中打印。&lt;/p&gt;&#xA;&lt;p&gt;&#xA;&lt;figure&gt;&#xA;    &lt;img src=&#34;https://img.liangmouyin.com/2025/06/db703263476325b627b847cef4944389.png&#34; alt=&#34;&#34; /&gt;&#xA;    &#xA;    &#xA;&lt;/figure&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;em&gt;在网页上阅读&lt;/em&gt;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;&lt;figure&gt;&#xA;    &lt;img src=&#34;https://img.liangmouyin.com/2025/06/921ab3cdf58f92e05edf59ff5cf92e70.png&#34; alt=&#34;&#34; /&gt;&#xA;    &#xA;    &#xA;&lt;/figure&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;em&gt;左：网页导出 PDF 打印；右：保存到 Obsidian 导出打印&lt;/em&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;em&gt;可对比第二段最后一句话的加粗部分&lt;/em&gt;&lt;/p&gt;&#xA;&lt;p&gt;这么做虽然放弃了原有网站格式，但胜在格式整洁统一，文章内容没有丢失。&lt;/p&gt;&#xA;&lt;p&gt;那这么做怎么能节省纸张？&lt;/p&gt;&#xA;&lt;p&gt;不少网站原有格式行间距比较大，直接另存为 PDF，就会多出几十页来。&lt;/p&gt;&#xA;&lt;p&gt;比如我今天打印了评论尸的 6.3 万字的雄文《幸福的积分》，这是篇讨论现代打工人应该如何获得幸福的文章。&lt;/p&gt;&#xA;&lt;p&gt;&#xA;&lt;figure&gt;&#xA;    &lt;img src=&#34;https://img.liangmouyin.com/2025/06/d92cc5b6c4e04e3d5e1bd1c74a06cfd6.png&#34; alt=&#34;&#34; /&gt;&#xA;    &#xA;    &#xA;&lt;/figure&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;em&gt;需要用荧光笔才能压住&lt;/em&gt;&lt;/p&gt;&#xA;&lt;p&gt;直接从从博客另存为 PDF，足足有 108 页，而保存到 Obsidian 后，导出 PDF 仅有 66 页。如果把边距设置为小，页数还能更少。这时打印出来的小册子，拿在手上颇有分量，对折后都感觉有些厚了。&lt;/p&gt;&#xA;&lt;p&gt;这篇文章我其实在去年 10 月份，就剪藏到 Obsidian 里，但一直都没去读。如今有了打印机，才让我有动力打印出来慢慢读之。&lt;/p&gt;&#xA;&lt;h2 id=&#34;3订书机最好买长臂订书机&#34;&gt;3、订书机最好买长臂订书机。&lt;/h2&gt;&#xA;&lt;p&gt;打印成小册子后，接下来需要思考的就是如何装订了。&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
